#!/usr/bin/env node

if( process.argv.length < 5 ) {
	console.log( "Usage: resistorFinder [a] [b] [e]\nFinds two resitors with best matching ratio a/b in series e" );
	process.exit(1);
}

// Read arguments
var a = parseInt( process.argv[2] );
var b = parseInt( process.argv[3] );
var e = parseInt( process.argv[4] );

// Make some hints, if series is not defined in DIN IEC 60063
if( e != 3 && e != 6 && e != 12 &&
    e != 24 && e != 48 && e != 96 && e != 192 ) {
	console.log( "Series E" + e + " not defined in DIN IEC 60063. Valid: 3, 6, 12, 24, 48, 96, 192" );
	process.exit(1);
}

// Create series
var series = [];
var base = Math.pow( 10, 1/e )
var factor = (e >= 48) ? 100 : 10;
for( var m = 0; m < e; m++ ) {

	// Calculate resistor value
	var value = Math.round( Math.pow( base, m ) * factor );

	// Some exceptions ...
	if( e <= 24 ) switch( value ) {
		case 26: value = 27; break;
		case 29: value = 30; break;
		case 32: value = 33; break;
		case 35: value = 36; break;
		case 38: value = 39; break;
		case 42: value = 43; break;
		case 46: value = 47; break;
		case 83: value = 82; break;
	}

	series.push( value );
}
console.log( "E" + e + " Series: " + series.join(", ") );


var ratio = a / b;
console.log( "Required ratio: " + a + "/" + b + " = " + ratio );


var best_err = 10, best_x = 0, best_y = 0;
for( var x = 0; x < series.length; x++ ) {
	for( var y = 0; y < series.length; y++ ) {
		// Squarred error
		var err = Math.pow( series[x] / series[y] - ratio, 2 );

		if( err < best_err ) {
			best_err = err;
			best_x = x;
			best_y = y;
		}
	}
}

console.log( "Found ratio:    " + series[best_x] / series[best_y] );
console.log( "Error^2:        " + best_err );
console.log( "R_a:            " + series[best_x] + " Ohm" );
console.log( "R_b:            " + series[best_y] + " Ohm" );
